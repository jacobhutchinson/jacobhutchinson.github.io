# Site settings
title: Jacob Hutchinson
name: Jacob Hutchinson

# Build settings
markdown: kramdown

#User specific content
#Links that will appear in the navbar
primarylinks:
 - title: GitHub
   url: https://github.com/jacobhutchinson
 - title: LinkedIn
   url: https://www.linkedin.com/in/jacob-m-hutchinson

#Any buzzword skills you want to include
skills:
 - Machine Learning
 - Natural Language Processing
 - Deep Learning
 - Tensorflow
 - PyTorch
 - Keras
 - NLTK
 - Spacy
 - SciKit Learn
 - Python
 - R
 - SQL
 - NoSQL
 - Jupyter
 - NumPy

#Blogfeed is optional - including this will add JS to call the feed and populate blog list
#blogfeed: https://automateddeveloper.blogspot.com/feeds/posts/default

#Work experience is required
roles:
 - title: Software Engineer Intern
   start: 2017
   end: 2017
   employer: United States Air Force Research Lab
   description: Worked for United States Air Force Research Lab in Rome, NY with the Satellite Team for a six month internship with Top Secret clearance. During that time I helped develop and reasearch Machine Learning approaches to technical question answering and other problems and gained insight from world-class researchers.

#Education is required
education:
 - level: Bachelor of Science (B.Sc.)
   date: 2020
   subject: Computer Science
   school: Northeastern University
 - level: Deep Learning Certificate
   date: 2021
   subject: DeepLearning.ai
   school: Coursera.org

#This section is optional (as is the image link below)
coursera:
  profileurl: https://www.coursera.org/user/5a0b159e6cd1c3ed538f5047e3f4f493
  courses:
    - title: Machine Learning
      link: https://www.coursera.org/learn/machine-learning/
      optionalimage: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/http://coursera-university-assets.s3.amazonaws.com/e8/7cc3d09d3f11e698dfff46d35f2da1/Stanford_Coursera_Logo.png?auto=format%2Ccompress&dpr=1&w=56px&h=56px&auto=format%2Ccompress&dpr=1&w=&h=
      date: February 19, 2020
    - title: Neural Networks and Deep Learning
      link: https://www.coursera.org/learn/neural-networks-deep-learning
      optionalimage: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/57/4be3fd8d16487ab9cfa7bba909b236/GreyLogoName1000x1000.png?auto=format%2Ccompress&dpr=2&w=100&h=100&fit=crop
      date: October 13, 2020
    - title: Improving Deep Neural Networks
      link: https://www.coursera.org/learn/deep-neural-network
      optionalimage: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/57/4be3fd8d16487ab9cfa7bba909b236/GreyLogoName1000x1000.png?auto=format%2Ccompress&dpr=2&w=100&h=100&fit=crop
      date: October 15, 2020
    - title: Structuring Machine Learning Projects
      link: https://www.coursera.org/learn/machine-learning-projects
      optionalimage: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/57/4be3fd8d16487ab9cfa7bba909b236/GreyLogoName1000x1000.png?auto=format%2Ccompress&dpr=2&w=100&h=100&fit=crop
      date: October 17, 2020
    - title: Convolutional Neural Networks
      link: https://www.coursera.org/learn/convolutional-neural-networks
      optionalimage: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/57/4be3fd8d16487ab9cfa7bba909b236/GreyLogoName1000x1000.png?auto=format%2Ccompress&dpr=2&w=100&h=100&fit=crop
      date: December 3, 2020
    - title: Sequence Models
      link: https://www.coursera.org/learn/nlp-sequence-models
      optionalimage: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/57/4be3fd8d16487ab9cfa7bba909b236/GreyLogoName1000x1000.png?auto=format%2Ccompress&dpr=2&w=100&h=100&fit=crop
      date: January 25, 2021

#This section is optional - embeds slideshows from speakerdeck
# to get the speakerdeck ID copy the embed code and look for the data-it attribute
#speakerdeck:
#   profileurl: https://speakerdeck.com/robhinds
#   talks:
#    - title: Product Management for Engineers
#      speakerdeckId: 94f0070c4e434ec79fe9b4eb2cb574e0
#      conference: API Conference, Berlin 2018
#    - title: Agile Machine Learning - from Theory to Production
#      speakerdeckId: ec84f2f56e9743afb0675b1eeeb6b6ce
#      conference: W-JAX Conference, Munich 2017 (London 2017)

#List of interesting Github repo/projects to include - optional
github:
  - jacobhutchinson/speech-commands
  - jacobhutchinson/Job-Site-Web-Scraper

#Stackoverflow flair is optional
#stackoverflow:
#   profileurl: https://stackoverflow.com/users/258813/rhinds
#   flairimageurl: https://stackoverflow.com/users/flair/258813.png

intro: |
  I am a recent graduate from Northeastern University with a B.S. in Computer Science. While in school, I tended to focus on the rise of Machine Learning and Deep Learning, having always been fascinated in the idea of learning algorithms. On top of my normal studies, which included optional classes such as Artificial Intelligence and a master's level Natural Language Processing course, I also sought out projects and classes online related to Machine Learning and Deep Learning, with a focus on Natural Language Processing tasks at first. Before I graduated I had worked through Stanford University's Machine Learning course, both the one hosted by Coursera and the seminal video recordings done in the classroom at Stanford by Andrew Ng.<br/><br/>
  My appetite for knowledge in the field was not quenched after I graduated, so I continued working my way through more Deep Learning focused classes, specifically the classes of the Deep Learning Specialization MOOC (Massive Open Online Course) from DeepLearning.ai, earning my certification in early 2021. The classes from this MOOC are listed below in the 'Coursera' section. I plan on starting more courses throughout 2021 as well, to help keep me up to date with various subfields of Deep Learning and Natural Language Processing.<br/><br/>
   During my time at Northeastern, I worked a 6 month coop at the United States Air Force Research Lab, working with the Satellite Division. During this time, I was introduced to a lot of fresh ideas about the world of Machine Learning and worked around world-class researchers. While working there, I helped develop and research new approaches to the Technical Question Answering problem.<br/><br/>
   More than anything, I enjoy taking a hard problem, breaking it down into steps and finding ways to use unique neural networks or other model architectures to feed the data to. With a background in software engineering from my degree, I always make sure to follow Object Oriented Design approaches to programming models, with clean code, easy extensibility and thorough documentation and test suites where suitable. My experience in research on the other hand taught me how to prototype quickly when needed. My background in Mathematics from my degree (Probability and Statistics, Linear Algebra, Differential and Integral Calculus, Discrete Math and Differential Equations) helps me to follow along with much of the latest works in various fields and understand the math behind more complex neural network architectures and what makes each of them different.<br/><br/>
    I am currently beginning a job search for jobs in the field of Machine Learning, Deep Learning, Natural Language Processing and Data Science. If you have an opening in these fields and think I would be a good fit, feel free to contact me at the following email address: jake.m.hutchinson@gmail.com

# An additional info freetext section is optional at the bottom of the page - can be text or HTML
additionalinfo: |
   <strong>NLP Speech Commands</strong>: In this project, I sought to research different approaches to tackling the Spoken Language Understanding problem. The Spoken Language Understanding problem, or SLU problem, is the task of taking an input voice recording and mapping it to one of many actions. The goal of this task is not to search for a verbatim command such as ‘Turn the volume down’ every time you want the volume turned down, but instead to accept a voice clip such as ‘The music is too loud’ as well. A traditional approach is more modular, where the incredible gains made in the task of Speech Recognition are leveraged by converting all audio into text first, and that text is converted via a neural network, typically a Recurrent Neural Network, or RNN, into one of many possible actions.<br/><br/>A newer approach is to instead pass the voice recording to the neural network model and leverage the learning ability of deep learning to create an ‘end-to-end’ neural network approach. This approach has the downside of not being able to leverage gains made in Speech Recognition for its accuracy, instead having to learn a representation of the words on its own. However, the potential upside is that it is able to take into account non-textual input sounds and potentially be able to correctly classify voice recordings that the traditional, modular model would struggle with.<br/><br/>To make the end-to-end model, which I was personally responsible for, I based it on the model presented by Lugosch et al. in their paper ‘Speech Model Pre-training for End-to-End Spoken Language Understanding’. Specifically, the voice input is initially passed into a 1-Dimensional Convolutional layer in PyTorch (Conv1D), followed by a Max Pooling layer and finally a Leaky ReLU. This stack of Conv1D, Max Pooling and Leaky ReLU is used 3 times in a row, to help extract features from the 1-Dimensional input voice data. Following the Convolutional Neural Network pass, the input is passed to a stack of bi-directional GRU's, or Gated Recurrent Units. The output is then passed to a feedforward layer to classify the input into one of the 31 different command classes in our dataset. Adam optimizer is used here, with cross entropy loss calculated in a way specific to this dataset. The relevant repository for this project is listed on my github profile.</a><br/><br/>
   <strong>Job Site Scraper and Visualizer</strong>: In this project, I sought to create a tool that could be helpful for myself and others that were searching for jobs in various locations around the country, while simultaneously trying out new visualization tools for the data. With this in mind, I created the Job Site Scraper and Visualizer. This program will automatically search for configurable search terms on various job sites, specifically, indeed.com, monster.com and flexjobs.com, all with configurable settings.<br/><br/>To accomplish this, I manually inspected the URL’s for searches of each of these sites and create a method to automatically generate search URL’s for each of the sites with any search term. Each of these sites has configurable options (for instance, with indeed.com, you can specify your experience level or whether or not you want to search for Remote jobs only). Then, I used the grequests library for python to retrieve the relevant HTML over http, and used the BeautifulSoup plugin for Python to help search the HTML for the relevant information about job listings. All of this scraping is done within the terms of web crawling and web scraping defined by each website’s ‘robots.txt’.<br/><br/>After that, the information scraped from each site is stored in a mysql database and multiple methods of accessing the data from within Python are used to grab relevant information for visualization. Speaking of visualization, there are three different methods that can be used to see the data that has been scraped. The Map View is used to see all jobs scraped country wide using a Bubble Map, where the size of each Bubble scales with the number of jobs in a given location. This helps one to see where the most job opportunities for their given search terms are over the entirety of the United States. The Location View is used to find jobs a given radius away from a given latitude and longitude, allowing one to find jobs in a given area. This is also represented with a Bubble Map. Finally, you can list all remote jobs easily as well. All of this is easily accessible via a simple Command Line Interface.<br/><br/>The repository for this project is listed on my github profile, if you want to see more pictures or more details.
